#####################################################################
#  Homing definition
#####################################################################
[homing_override]
axes: z
set_position_z: 0
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set home_x, home_y, home_z = False, False, False %} ; define what axes need to be homed
  {% if params.X is not defined and params.Y is not defined and params.Z is not defined %} ; G28
    {% set home_x, home_y, home_z = True, True, True %}
  {% else %}
    {% if params.X is defined %}{% set home_x = True %}{% endif %}
    {% if params.Y is defined %}{% set home_y = True %}{% endif %}
    {% if params.Z is defined %}
      {% if 'x' not in printer.toolhead.homed_axes %}{% set home_x = True %}{% endif %} ; check if homed
      {% if 'y' not in printer.toolhead.homed_axes %}{% set home_y = True %}{% endif %} ; check if homed
      {% set home_z = True %}
    {% endif %}
  {% endif %}
  {% if user.hw.mag_probe.ena %} _MAG_PROBE ACTION=GET_STATUS RESPOND=0 {% endif %} ; generate probe state
  _SET_ACC VAL=HOME                                   ; reduce accel and accel_to_decel
  G0 Z{user.homing.z_endstop.hop} F{user.speed.z_hop} ; lift nozzle
  {% if home_x %} G28 X   {% endif %}                 ; home X
  {% if home_y %} G28 Y   {% endif %}                 ; home Y
  {% if home_z %} _HOME_Z {% endif %}                 ; home Z
  _SET_ACC                                            ; set accel and accel_to_decel back to cfg value


[gcode_macro _HOME_Z]
description: Helper: z homing
variable_calibrate_z_next: False
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  ; use -10 as default to insure it error out in case the variable is not existing
  {% set z_endstop = user.homing.z_endstop|default({'x':-10,'y':-10,'z':0, 'hop':0}) %}
  {% if user.hw.mag_probe.ena %}
    {% set probe = printer['gcode_macro _MAG_PROBE'].state|default('unknown')|lower %} ; get probe state
    {% set error = "run \"_MAG_PROBE ACTION=GET_STATUS\"" if probe == 'unknown' 
              else "last dock or undock failed"           if probe == 'error'
              else "not valid"                            if probe is not in ['docked','attached']
              else "" %}
    {% if error|length > 0 %} 
      {action_raise_error("Home&Probe: MagProbe state %s %s" % (error,probe|upper))}
    {% endif %}
  {% endif %}
  {% if user.hw.mag_probe.ena and probe == 'attached' %}
    {action_respond_info("Home&Probe: Probe docked, remove probe first")}
    DETACH_PROBE                                          ; detach probe
  {% endif %}
  _SET_Z_CURRENT VAL=HOME                                 ; reduce Z current
  G90                                                     ; absolute position
  G0 X{z_endstop.x} Y{z_endstop.y} F{user.speed.travel}   ; move to endstop position
  G28 Z                                                   ; home Z
  G0 Z{z_endstop.z} F{user.speed.z_hop/3}                 ; lift toolhead to stop pressing on the pin
  {% if calibrate_z_next %}
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=calibrate_z_next VALUE=False
  {% else %}
    _SET_Z_CURRENT                                        ; set Z current back to cfg value
    G0 Z{user.z_hop} F{user.speed.z_hop}                  ; lift toolhead
  {% endif %}
  {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative

#####################################################################
#  Macros
#####################################################################
## conditional home
[gcode_macro _CG28]
description: Helper: Conditional homing
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %} G28 {% endif %}

